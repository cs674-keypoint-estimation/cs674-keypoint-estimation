import numpy as np
import os

def generate_camera_mat():
    return np.array([
        [149.84375, 0.0, 68.5],
        [0.0, 149.84375, 68.5],
        [0.0, 0.0, 1.0]
    ])

def generate_world_mat(index):
    if index == 0:
        return np.array([
 [-5.32423683e-01, 3.84727203e-08, -8.46478010e-01, -2.20298319e-15],
 [ 4.01814331e-01, -8.80153247e-01, -2.52736040e-01,  5.03983751e-08],
 [-7.45030379e-01, -4.74689649e-01,  4.68614418e-01,  1.15298043e+00]])
    elif index == 1:
        return np.array([[ 9.89744882e-01,  3.89518816e-08, -1.42846309e-01, -2.82228761e-15],
 [ 6.48204312e-02, -8.91115179e-01,  4.49123647e-01,  6.45664074e-08],
 [-1.27292497e-01, -4.53777191e-01, -8.81976690e-01,  1.47710722e+00]])
    
    elif index == 2:
        return np.array([[ 9.99018750e-01,  3.91366331e-08,  4.42892519e-02, -3.12219231e-15],
 [-1.97254978e-02, -8.95341801e-01,  4.44942652e-01,  7.14274263e-08],
 [ 3.96540360e-02, -4.45379679e-01, -8.94463246e-01,  1.63406904e+00]])
    
    elif index == 3:
        return np.array([[ 5.76878624e-01,  3.96038264e-08,  8.16829880e-01, -2.60394137e-15],
 [-3.45693493e-01, -9.06029938e-01,  2.44142909e-01,  5.95712281e-08],
 [ 7.40072335e-01, -4.23213600e-01, -5.22669291e-01,  1.36283084e+00]])
    
    elif index == 4:
        return np.array([[ 1.46499292e-01,  3.95764906e-08,  9.89210775e-01, -2.38576255e-15],
 [-4.19969275e-01, -9.05404567e-01,  6.21962872e-02,  5.45798791e-08],
 [ 8.95635956e-01, -4.24549844e-01, -1.32641112e-01,  1.24864209e+00]])
    
    elif index == 5:
        return np.array([[ 8.77719552e-01,  3.81806423e-08,  4.79174694e-01, -2.24559010e-15],
 [-2.33298473e-01, -8.73471280e-01,  4.27340316e-01,  5.13731076e-08],
 [ 4.18545350e-01, -4.86875675e-01, -7.66662812e-01,  1.17527971e+00]])
    
    elif index == 6:
        return np.array([[-9.61709125e-02,  3.84249977e-08,  9.95364835e-01, -2.20100727e-15],
 [-4.74498798e-01, -8.79061480e-01, -4.58454498e-02,  5.03531713e-08],
 [ 8.74986884e-01, -4.76708417e-01,  8.45401629e-02,  1.15194628e+00]])
    
    elif index == 7:
        return np.array([[-5.08634738e-01,  3.83163049e-08,  8.60982406e-01, -2.49231262e-15],
 [-4.14361146e-01, -8.76574879e-01, -2.44788323e-01,  5.70174603e-08],
 [ 7.54715539e-01, -4.81265501e-01,  4.45856450e-01,  1.30440744e+00]])
    
    elif index == 8:
        return np.array([[-5.74643213e-01,  3.84372315e-08,  8.18404043e-01, -2.93507778e-15],
 [-3.89717439e-01, -8.79341358e-01, -2.73640446e-01,  6.71467454e-08],
 [ 7.19656512e-01, -4.76191953e-01,  5.05307559e-01,  1.53613848e+00]])
    
    elif index == 9:
        return np.array([[-8.59003582e-02,  3.89504256e-08, -9.96303733e-01, -2.64939970e-15],
 [ 4.52165067e-01, -8.91081871e-01, -3.89852759e-02,  6.06111935e-08],
 [-8.87788196e-01, -4.53842594e-01,  7.65442342e-02,  1.38662248e+00]])
    
    elif index == 10:
        return np.array([[-7.36084209e-01,  3.94401207e-08,  6.76889974e-01, -2.69075182e-15],
 [-2.91834734e-01, -9.02284787e-01, -3.17355718e-01,  6.15572195e-08],
 [ 6.10747514e-01, -4.31140538e-01,  6.64157595e-01,  1.40826503e+00]])
    
    elif index == 11:
        return np.array([[ 7.52786783e-01,  3.79237027e-08,  6.58264430e-01, -3.07950959e-15],
 [-3.27338178e-01, -8.67593188e-01,  3.74341792e-01,  7.04509596e-08],
 [ 5.71105750e-01, -4.97274632e-01, -6.53112672e-01,  1.61173009e+00]])
    
    elif index == 12:
        return np.array([[ 5.97693194e-01,  3.79701796e-08, -8.01724919e-01, -3.13907779e-15],
 [ 3.97186523e-01, -8.68656455e-01,  2.96106112e-01,  7.18137210e-08],
 [-6.96423515e-01, -4.95414941e-01, -5.19190066e-01,  1.64290643e+00]])
    
    elif index == 13:
        return np.array([[ 1.60087499e-01,  3.84110141e-08, -9.87102828e-01, -2.72900415e-15],
 [ 4.71142072e-01, -8.78741574e-01,  7.64093874e-02,  6.24323307e-08],
 [-8.67408289e-01, -4.77297859e-01, -1.40675559e-01,  1.42828524e+00]])
    
    elif index == 14:
        return np.array([[-9.65951526e-01,  3.86550926e-08, -2.58723113e-01, -2.40975815e-15],
 [ 1.20790282e-01, -8.84325438e-01, -4.50974752e-01,  5.51288343e-08],
 [-2.28795448e-01, -4.66870988e-01,  8.54215502e-01,  1.26120072e+00]])
    
    elif index == 15:
        return np.array([[-2.34664506e-01,  3.81952768e-08, -9.72076422e-01, -2.49917783e-15],
 [ 4.72696015e-01, -8.73806079e-01, -1.14111409e-01,  5.71745179e-08],
 [-8.49406291e-01, -4.86274548e-01,  2.05051254e-01,  1.30800050e+00]])
    
    elif index == 16:
        return np.array([[-1.95030789e-01,  3.87891896e-08,  9.80797120e-01, -3.10330846e-15],
 [-4.52160536e-01, -8.87393219e-01, -8.99117565e-02,  7.09954142e-08],
 [ 8.70352710e-01, -4.61013313e-01,  1.73069017e-01,  1.62418576e+00]])
    
    elif index == 17:
        return np.array([[-5.42998373e-01,  3.81590391e-08,  8.39733747e-01, -3.11933194e-15],
 [-4.09589618e-01, -8.72977057e-01, -2.64853549e-01,  7.13619886e-08],
 [ 7.33068286e-01, -4.87761271e-01,  4.74025138e-01,  1.63257200e+00]])
    
    elif index == 18:
        return np.array([[-4.18536175e-01,  3.86845680e-08,  9.08200127e-01, -2.95400154e-15],
 [-4.22850261e-01, -8.84999756e-01, -1.94866849e-01,  6.75796705e-08],
 [ 8.03756883e-01, -4.65591486e-01,  3.70404429e-01,  1.54604265e+00]])
    
    elif index == 19:
        return np.array([[-2.31205971e-01,  3.88315457e-08, -9.72904825e-01, -2.61001302e-15],
 [ 4.46702731e-01, -8.88362214e-01, -1.06156708e-01,  5.97101311e-08],
 [-8.64291889e-01, -4.59143307e-01,  2.05394631e-01,  1.36600857e+00]])
    
    elif index == 20:
        return np.array([[ 6.19461164e-01,  3.86880553e-08, -7.85027303e-01, -3.10568465e-15],
 [ 3.65382976e-01, -8.85079538e-01,  2.88321856e-01,  7.10497752e-08],
 [-6.94811592e-01, -4.65439804e-01, -5.48272415e-01,  1.62542939e+00]])
    
    elif index == 21:
        return np.array([[-9.52610220e-01,  3.88778139e-08, -3.04193637e-01, -2.97861562e-15],
 [ 1.39043682e-01, -8.89420708e-01, -4.35428133e-01,  6.81427748e-08],
 [-2.70556137e-01, -4.57089493e-01,  8.47271251e-01,  1.55892497e+00]])
    
    elif index == 22:
        return np.array([[-9.90254225e-01,  3.90479980e-08,  1.39271566e-01, -3.12376598e-15],
 [-6.25932655e-02, -8.93314066e-01, -4.45052876e-01,  7.14634276e-08],
 [ 1.24413231e-01, -4.49432953e-01,  8.84608031e-01,  1.63489265e+00]])
    
    else:
        return np.array([[ 4.12718428e-01,  3.86731124e-08, -9.10858660e-01, -2.81995978e-15],
 [ 4.24541487e-01, -8.84737683e-01,  1.92363611e-01,  6.45131526e-08],
 [-8.05870973e-01, -4.66089297e-01, -3.65147562e-01,  1.47588890e+00]])

    

def generate_poses(folder_of_pcds, rotations):

    if not os.path.exists(output_folder):
        os.mkdir(output_folder)

    poses_list ={}
    for filename in os.listdir(folder_of_pcds):
        for index in range(rotations):
            #print("index: ",index)
            #print("name: ",filename)


            camera_mat = generate_camera_mat()
            world_mat = generate_world_mat(index)

            poses_list[f'camera_mat_{index}'] = camera_mat
            poses_list[f'world_mat_{index}'] = world_mat
        new_filename = os.path.splitext(filename)[0]
        npz_path = os.path.join(output_folder, f"{new_filename}.npz")
        np.savez(npz_path, **poses_list)
        #print(poses_list)
    return None 

input_folder = 'dataset/pcds/03467517' #Change last section to shape ID
output_folder ='dataset/poses/03467517' #Change last section to shape ID

#print(os.listdir('dataset/pcds'))
generate_poses(input_folder,24)

